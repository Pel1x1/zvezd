```Room page
"use client";

import { useState, useEffect } from "react";
import { RoomPhotosProps } from "@/lib/types";
import Image from "next/image";

export default function RoomPhotos({ room }: RoomPhotosProps) {
  const [isOpen, setIsOpen] = useState(false);
  const [currentPhoto, setCurrentPhoto] = useState<string | null>(null);
  const [startIndex, setStartIndex] = useState(0);
  const [isMobile, setIsMobile] = useState(false);

  // Определяем мобильное устройство по ширине окна
  useEffect(() => {
    const checkMobile = () => setIsMobile(window.innerWidth < 768);
    checkMobile();
    window.addEventListener("resize", checkMobile);
    return () => window.removeEventListener("resize", checkMobile);
  }, []);

  // Количество фото для отображения в зависимости от устройства
  const photosToShow = isMobile ? 1 : 3;
  const maxStartIndex = room.photos.length - photosToShow;

  const openModal = (photo: string) => {
    setCurrentPhoto(photo);
    setIsOpen(true);
  };

  const closeModal = () => {
    setIsOpen(false);
    setCurrentPhoto(null);
  };

  const goPrev = () => {
    setStartIndex((prev) => (prev > 0 ? prev - 1 : prev * 0 + maxStartIndex));
  };

  const goNext = () => {
    setStartIndex((prev) => (prev < maxStartIndex ? prev + 1 : prev * 0 + 1));
  };

  const slideWidthPercent = 50 / photosToShow;
  const visiblePhotos = room.photos.slice(startIndex, startIndex + photosToShow);

  return (
    <section className="py-12 bg-[#D2B6B1]">
      <div className="container mx-auto px-4 max-w-7xl">
        <h2 className="text-5xl font-bold mb-8 text-white " style={{ fontFamily: "ZenAntique" }}>
          Фотографии номера
        </h2>

        {isMobile ? (
          <div
            className="grid items-center"
            style={{
              gap: "1rem", // gap-4
              gridTemplateColumns: "auto 1fr auto",
              marginTop: "0.75rem", // mt-3
              width: "100%",
              margin: "0 auto"
            }}
          >
            <button
              onClick={goPrev}
              aria-label="Предыдущие фото"
              style={{
                color: "white", // text-white
                fontSize: "3rem", // text-5xl
                fontWeight: "bold", // font-bold
                opacity: 1, // disabled:opacity-40 handled by React disabled prop
                userSelect: "none" // select-none
              }}
            >
              &lt;
            </button>

            <div
              className="relative w-full"
              style={{
                borderRadius: "0.5rem", // rounded-lg
                overflow: "hidden", // overflow-hidden
                cursor: "pointer", // cursor-pointer
                transition: "transform 0.5s ease-in-out", // transition-all duration-500 ease-in-out
                aspectRatio: "4 / 3"
              }}
              onClick={() => openModal(visiblePhotos[0])}
            >
              <Image
                src={visiblePhotos[0]}
                alt={`${room.name} - фото ${startIndex}`}
                fill
                className="object-cover"
                priority={startIndex === 0}
              />
            </div>

            <button
              onClick={goNext}
              aria-label="Следующие фото"
              style={{
                color: "white",
                fontSize: "3rem",
                fontWeight: "bold",
                opacity: 1,
                userSelect: "none"
              }}
            >
              &gt;
            </button>
          </div>
        ) : (
          <div
            className="grid items-center"
            style={{
              gap: "1rem",
              gridTemplateColumns: "auto 1fr 1fr 1fr auto",
              marginTop: "20px", // mt-4
              width: "100%",
              margin: "0 auto",
              transform: "scale(1.05)"
            }}
          >
            <button
              onClick={goPrev}
              aria-label="Предыдущие фото"
              style={{
                color: "white",
                fontSize: "1.5rem",
                fontWeight: "bold",
                opacity: 1,
                userSelect: "none"
              }}
            >
              &lt;
            </button>
            {visiblePhotos.map((photo, idx) => (
              <div
                key={startIndex + idx}
                className="relative w-full"
                style={{
                  borderRadius: "0.5rem",
                  overflow: "hidden",
                  cursor: "pointer",
                  aspectRatio: "4 / 3"
                }}
                onClick={() => openModal(photo)}
              >
                <Image
                  src={photo}
                  alt={`${room.name} - фото ${startIndex + idx}`}
                  fill
                  className="object-cover"
                  priority={startIndex === 0 && idx === 0}
                />
              </div>
            ))}
            <button
              onClick={goNext}
              aria-label="Следующие фото"
              style={{
                color: "white",
                fontSize: "1.5rem",
                fontWeight: "bold",
                opacity: 1,
                userSelect: "none"
              }}
            >
              &gt;
            </button>
          </div>
        )}


        {/* Модальное окно */}
        {isOpen && currentPhoto && (
          <div
            className="fixed inset-0 bg-black bg-opacity-80 flex items-center justify-center z-50 "
            onClick={closeModal}
          >
            <div className="relative w-[95%] h-[95%]" onClick={(e) => e.stopPropagation()}>
              <Image
                src={currentPhoto}
                alt="Фото в полном размере"
                fill
                className="object-contain rounded transition-transform duration-500 ease-in-out"
                priority
              />
              <button
                onClick={closeModal}
                className="absolute top-2 right-2 text-white text-5xl font-bold bg-black bg-opacity-50 rounded-full w-[50px] h-[50px] flex items-center justify-center"
                aria-label="Закрыть"
              >
                &times;
              </button>
            </div>
          </div>
        )}
      </div>
    </section>
  );
}

"use client";

import Image from "next/image";
import { useIsMobile } from "@/app/hooks/use-mobile";
import { RoomHeroProps } from '@/lib/types';

export default function RoomHero({ room }: RoomHeroProps) {
    const isMobile = useIsMobile();
return (
    <section className="relative min-h-screen w-full bg-black overflow-hidden">
        {/* Контейнер для рамки и фото */}
        <div className="relative w-[calc(100vw-64px)] h-[calc(100vh-64px)] mx-auto my-auto ">
        <Image
            src={room.photos[0]}
            alt="Hero background"
            fill
            className="object-cover "
            priority
        />
        </div>
        {/* Центрированный текст поверх фото */}
        <div className="absolute inset-0 flex flex-col items-center justify-center z-1 ">
        <div className="items-center flex flex-col justify-center">
        <p className="text-white text-[30px] md:text-[70px] mb-4 drop-shadow-lg" style={{fontFamily: "ZenAntoquie"}}>{room.name}</p>
        <p className="text-white text-[15px] md:text-[30px] font-light max-w-2xl text-center drop-shadow-md"  style={{fontFamily: "RobotoL"}}>
        {room.description}
        </p>
        </div>
        </div>
        {/* Текст в левом нижнем углу рамки */}
        <div className="w-[calc(100vw-64px)] mx-auto mt-[10px] left-8 bottom-8 z-10 text-[rgba(210,182,177,1)] text-sm font-light tracking-[2px] leading-none">
      Московская область, г. Щёлково, д. Шевёлкино, 1
    </div>
    </section>
    );
} 

"use client";


import { RoomFeatureProps } from '@/lib/types';

export default function RoomFeature({ room }: RoomFeatureProps) {
  return (
    <section className="py-12 bg-[#D2B6B1]">
      <div className="container mx-auto px-4 ">
        <h2 className="text-5xl font-bold mb-8 text-white" style={{fontFamily:"ZenAntique"}}>Особенности номера</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 mt-[15px]">
          {room.features.map((feature, index) => (
            <div key={index} className=" border-[2px] p-4 rounded-lg shadow-sm items-center flex flex-col justify-center bg-white/10">
                <p className="text-xl text-white mb-0 mt-0 font-semibold " style={{fontFamily:"RobotoL"}}>{feature}</p>
            </div>
          ))}
        </div>
      </div>
    </section>
  );
} 

"use client";

import { RoomDetailsProps } from '@/lib/types';
import { useIsMobile } from "@/app/hooks/use-mobile";
import { Route } from 'lucide-react';
import { useRouter } from 'next/navigation';
import { Button } from "@/app/spa/sections/button";

export default function RoomDetails({ room }: RoomDetailsProps) {
      const isMobile = useIsMobile();
        const router = useRouter();
  return (
    <section className="py-12 bg-[#D2B6B1]">
      <div className="container mx-auto px-4">
        {(room.id === '5' || room.id === '6') && (
        <div className="mb-8 flex gap-4 justify-center">
          <Button
            onClick={() => router.push("/rooms/shalle1")}
            disabled = {room.id === '5'}
            size="lg"
            variant={room.id === "5" ? "default" : "transparent"}
            className="px-10 py-3 text-white border-white bg-white/20 transition-all "
            style={{ fontFamily: "Roboto", borderRadius: "12px", }}
          >
            1 комнатные
          </Button>
          <Button
            onClick={() => router.push("/rooms/shalle2")}
            disabled = {room.id === '6'}
            size="lg"
            variant={room.id === "6" ? "default" : "transparent"}
            className="px-10 py-3 text-white border-white bg-white/20 transition-all "
            style={{ fontFamily: "Roboto", borderRadius: "12px", }}
          >
            2 комнатные
          </Button>
        </div>
        )}
        <h2 className=" text-white font-bold mb-8" style={{fontFamily:"ZenAntique", fontSize: isMobile? "40px" : "40px"}}>{room.name}</h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-8">
          <div>
            <p className="text-white mb-[15px]" style={{fontFamily:"RobotoL", fontSize: isMobile? "20px" : "25px"}}>{room.description}</p>
            <div className="grid grid-cols-2 gap-4">
              <div className="border-[2px] p-[15px] rounded-lg bg-white/10">
                <p className="text-xl text-white" style={{fontFamily:"ZenAntique"}}>Размер</p>
                <p className="font-semibold text-white text-2xl" style={{fontFamily:"RobotoL"}}>{room.details.size}</p>
              </div>
              <div className="bg-white/10 border-[2px] p-[15px] rounded-lg">
                <p className="text-xl text-white" style={{fontFamily:"ZenAntique"}}>Вместимость</p>
                <p className="font-semibold text-white text-2xl" style={{fontFamily:"RobotoL"}}>{room.details.capacity} чел.</p>
              </div>
              <div className="bg-white/10 border-[2px] p-[15px] rounded-lg">
                <p className="text-xl text-white" style={{fontFamily:"ZenAntique"}}>Тип кровати</p>
                <p className="font-semibold text-white text-2xl" style={{fontFamily:"RobotoL"}}>{room.details.bedType}</p>
              </div>
              <div className="bg-white/10 border-[2px] p-[15px] rounded-lg">
                <p className="text-xl text-white" style={{fontFamily:"ZenAntique"}}>Вид</p>
                <p className="font-semibold text-white text-2xl" style={{fontFamily:"RobotoL"}}>{room.details.view}</p>
              </div>
            </div>
          </div>
          <div className="bg-white/10 border-[2px] rounded-lg p-6">
            <h3 className="text-xl font-semibold mb-4 text-white" style={{fontFamily:"ZenAntique"}}>Удобства</h3>
            <div className="grid grid-cols-2 gap-4">
              {room.amenities.map((amenity, index) => (
                <div key={index} className="flex items-center text-white" style={{fontFamily:"RobotoL"}}>
                  <span className="mr-2">•</span>
                  <span className='text-xl font-semibold'>{amenity.name}</span>
                </div>
              ))}
            </div>
          </div>
        </div>
      </div>
    </section>
  );
} 
```